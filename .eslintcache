[{"C:\\Users\\JackS\\Desktop\\code\\react\\portfolio-website\\src\\reportWebVitals.js":"1","C:\\Users\\JackS\\Desktop\\code\\react\\portfolio-website\\src\\index.js":"2","C:\\Users\\JackS\\Desktop\\code\\react\\portfolio-website\\src\\App.js":"3","C:\\Users\\JackS\\Desktop\\code\\react\\portfolio-website\\src\\components\\Skills.js":"4","C:\\Users\\JackS\\Desktop\\code\\react\\portfolio-website\\src\\components\\CatFact.js":"5","C:\\Users\\JackS\\Desktop\\code\\react\\portfolio-website\\src\\components\\NavbarMenu.js":"6","C:\\Users\\JackS\\Desktop\\code\\react\\portfolio-website\\src\\components\\AppShowcase.js":"7","C:\\Users\\JackS\\Desktop\\code\\react\\portfolio-website\\src\\components\\Footer.js":"8","C:\\Users\\JackS\\Desktop\\code\\react\\portfolio-website\\src\\components\\Navbar.js":"9","C:\\Users\\JackS\\Desktop\\code\\react\\portfolio-website\\src\\components\\Projects.js":"10","C:\\Users\\JackS\\Desktop\\code\\react\\portfolio-website\\src\\components\\Clock.js":"11","C:\\Users\\JackS\\Desktop\\code\\react\\portfolio-website\\src\\components\\Jobs.js":"12","C:\\Users\\JackS\\Desktop\\code\\react\\portfolio-website\\src\\components\\Calculator.js":"13","C:\\Users\\JackS\\Desktop\\code\\react\\portfolio-website\\src\\components\\MotivationalQuote.js":"14"},{"size":362,"mtime":1609888993195,"results":"15","hashOfConfig":"16"},{"size":500,"mtime":1611702838580,"results":"17","hashOfConfig":"16"},{"size":724,"mtime":1611699916501,"results":"18","hashOfConfig":"16"},{"size":1266,"mtime":1612513327760,"results":"19","hashOfConfig":"16"},{"size":2075,"mtime":1612502518506,"results":"20","hashOfConfig":"16"},{"size":1564,"mtime":1612503250964,"results":"21","hashOfConfig":"16"},{"size":578,"mtime":1612429828851,"results":"22","hashOfConfig":"16"},{"size":365,"mtime":1612425177775,"results":"23","hashOfConfig":"16"},{"size":1842,"mtime":1612503319607,"results":"24","hashOfConfig":"16"},{"size":3830,"mtime":1612513456825,"results":"25","hashOfConfig":"16"},{"size":1008,"mtime":1612501002427,"results":"26","hashOfConfig":"16"},{"size":1522,"mtime":1612513316471,"results":"27","hashOfConfig":"16"},{"size":4476,"mtime":1612501018030,"results":"28","hashOfConfig":"16"},{"size":2374,"mtime":1612503982680,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"tmonfs",{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\JackS\\Desktop\\code\\react\\portfolio-website\\src\\reportWebVitals.js",[],"C:\\Users\\JackS\\Desktop\\code\\react\\portfolio-website\\src\\index.js",[],"C:\\Users\\JackS\\Desktop\\code\\react\\portfolio-website\\src\\App.js",["59","60"],"C:\\Users\\JackS\\Desktop\\code\\react\\portfolio-website\\src\\components\\Skills.js",[],"C:\\Users\\JackS\\Desktop\\code\\react\\portfolio-website\\src\\components\\CatFact.js",[],"C:\\Users\\JackS\\Desktop\\code\\react\\portfolio-website\\src\\components\\NavbarMenu.js",[],"C:\\Users\\JackS\\Desktop\\code\\react\\portfolio-website\\src\\components\\AppShowcase.js",[],"C:\\Users\\JackS\\Desktop\\code\\react\\portfolio-website\\src\\components\\Footer.js",[],"C:\\Users\\JackS\\Desktop\\code\\react\\portfolio-website\\src\\components\\Navbar.js",[],"C:\\Users\\JackS\\Desktop\\code\\react\\portfolio-website\\src\\components\\Projects.js",["61"],"C:\\Users\\JackS\\Desktop\\code\\react\\portfolio-website\\src\\components\\Clock.js",[],"C:\\Users\\JackS\\Desktop\\code\\react\\portfolio-website\\src\\components\\Jobs.js",[],"C:\\Users\\JackS\\Desktop\\code\\react\\portfolio-website\\src\\components\\Calculator.js",["62"],"import { useState } from 'react';\r\nimport Draggable from 'react-draggable';\r\n\r\n// Main Component\r\nconst Calculator = (props) => {\r\n  const [isActive, setIsActive] = useState(false);\r\n  const [answer, setAnswer] = useState(\"\");\r\n  const [question, setQuestion] = useState(\"\");\r\n\r\n  if(props.props === true && isActive !== true){\r\n    setIsActive(true)\r\n  } \r\n  if(props.props === false && isActive !== false){\r\n    setIsActive(false)\r\n  }\r\n\r\n  // our method to handle all click events from our buttons \r\n  const handleClick = (value) =>{ \r\n    // get the value from the target element (button) \r\n    switch (value) { \r\n      case '=': { \r\n        // if it's an equal sign, use the eval module \r\n        // to evaluate the question ,convert the answer \r\n        // (in number) to String \r\n        if (question !== '') \r\n        { \r\n          let ans=''; \r\n          try { \r\n              ans = eval(question); \r\n            } \r\n            catch(err) \r\n            { \r\n              setAnswer(\"Math Error\"); \r\n            } \r\n            if (ans===undefined) {\r\n              setAnswer(\"Math Error\"); \r\n            } else {\r\n              setAnswer(ans);  setQuestion(''); \r\n            }\r\n        } \r\n        break;\r\n      } \r\n      case 'Clear': { \r\n  \r\n        // if it's the Clears sign, just clean our  \r\n        // question and answer in the state \r\n        setQuestion('')\r\n        setAnswer(''); \r\n        break; \r\n      } \r\n  \r\n      case 'Delete': { \r\n        var str = question; \r\n          str = str.substr(0,str.length-1); \r\n          setQuestion(str); \r\n          break; \r\n      } \r\n  \r\n    default: { \r\n        // for every other command, update the answer in the state \r\n        setQuestion(question + value); \r\n        break; \r\n      } \r\n    } \r\n  } \r\n\r\n  if(isActive === true){\r\n    return (\r\n      <Draggable handle=\".handle\">\r\n        <div className=\"Calculator\">\r\n          <div className=\"calculator-x-button-div handle\">\r\n            <p className=\"calculator-title\"><strong>Calculator</strong></p>\r\n            <button className=\"calculator-x-button\" onClick={() => {props.setClose(false)}}>x</button>\r\n          </div>\r\n          <div className=\"calculator-case\">\r\n            <div className=\"screen\"> \r\n              <div className=\"screen-row\"> \r\n                <input className=\"calculator-screen\" type=\"text\" readOnly value={question}/> \r\n              </div>\r\n              <div className=\"screen-row\"> \r\n                <input className=\"calculator-screen\" type=\"text\" readOnly value={answer}/> \r\n              </div>\r\n            </div>\r\n            <div className=\"button-row\"> \r\n              <button label={'Clear'} onClick={() => {handleClick('Clear')}}>Clear</button>\r\n              <button label={'Delete'} onClick={() => {handleClick('Delete')}}>Delete</button>\r\n              <button label={'.'} onClick={() => {handleClick('.')}}>.</button>\r\n              <button label={'/'} onClick={() => {handleClick('/')}}>/</button>\r\n            </div> \r\n            <div className=\"button-row\"> \r\n              <button label={'7'} onClick={() => {handleClick('7')}}>7</button>\r\n              <button label={'8'} onClick={() => {handleClick('8')}}>8</button>\r\n              <button label={'9'} onClick={() => {handleClick('9')}}>9</button>\r\n              <button label={'*'} onClick={() => {handleClick('*')}}>*</button>\r\n            </div> \r\n            <div className=\"button-row\"> \r\n              <button label={'4'} onClick={() => {handleClick('4')}}>4</button>\r\n              <button label={'5'} onClick={() => {handleClick('5')}}>5</button>\r\n              <button label={'6'} onClick={() => {handleClick('6')}}>6</button>\r\n              <button label={'-'} onClick={() => {handleClick('-')}}>-</button>\r\n            </div> \r\n            <div className=\"button-row\"> \r\n              <button value={'1'} onClick={() => {handleClick('1')}}>1</button>\r\n              <button label={'2'} onClick={() => {handleClick('2')}}>2</button>\r\n              <button label={'3'} onClick={() => {handleClick('3')}}>3</button>\r\n              <button label={'+'} onClick={() => {handleClick('+')}}>+</button>\r\n            </div> \r\n            <div className=\"button-row\"> \r\n              <button onClick={() => {handleClick('0')}}>0</button>\r\n              <button onClick={() => {handleClick('=')}}>=</button>\r\n            </div> \r\n          </div>\r\n        </div>\r\n      </Draggable> \r\n    )\r\n  } else {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default Calculator","C:\\Users\\JackS\\Desktop\\code\\react\\portfolio-website\\src\\components\\MotivationalQuote.js",[],{"ruleId":"63","severity":1,"message":"64","line":2,"column":35,"nodeType":"65","messageId":"66","endLine":2,"endColumn":45},{"ruleId":"63","severity":1,"message":"67","line":3,"column":10,"nodeType":"65","messageId":"66","endLine":3,"endColumn":18},{"ruleId":"68","severity":1,"message":"69","line":36,"column":43,"nodeType":"70","endLine":36,"endColumn":55},{"ruleId":"71","severity":1,"message":"72","line":29,"column":21,"nodeType":"73","messageId":"74","endLine":29,"endColumn":25},"no-unused-vars","'IconButton' is defined but never used.","Identifier","unusedVar","'MenuIcon' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-eval","eval can be harmful.","CallExpression","unexpected"]